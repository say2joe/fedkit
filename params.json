{"name":"FED Kit","tagline":"The repo will serve as a library and jumpstart for front-end development.","body":"FED Kit\r\n=======\r\n\r\nThe FED Kit repo will serve as a library and jumpstart for front-end development (FED).\r\n\r\nThe projects / files found in this repo should be \"best-of-breed\", so please  \r\nmake sure to note any additions to the repo which have not been fully vetted.\r\n\r\n<br/>\r\n## Must-Haves for Web Development ##\r\n- [Xcode /w Command Line Tools](http://developer.apple.com/xcode/) (Mac)\r\n- [Adobe Edge Inspect](http://html.adobe.com/edge/inspect/) (All)\r\n- [Google Chrome](http://www.google.com/intl/en/chrome/browser/) (All)\r\n\r\n## FED-Focused IDEs (free) ##\r\n- [Sublime Text 2/3](http://www.sublimetext.com/)\r\n- [Eclipse (/w JS)](http://www.eclipse.org/downloads/packages/eclipse-ide-java-ee-developers/keplerr)\r\n- [Brackets (beta)](https://github.com/adobe/brackets)\r\n\r\n## Local Web Servers ##\r\n- [XAMPP (Mac OS X)](http://www.apachefriends.org/en/xampp-macosx.html)\r\n- [XAMPP (Windows)](http://www.apachefriends.org/en/xampp-windows.html)\r\n\r\n<br/>\r\n## Web App Scaffolding ##\r\n### [Yeoman](https://github.com/yeoman/yeoman/wiki/Getting-Started)\r\n> Includes (optionally): HTML5 Boilerplate, jQuery, Bootstrap, Modernizr, Angular, etc. /w Bower and Grunt.\r\n#### Install [nodejs/npm](https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager#osx) using [Homebrew](http://brew.sh/) or [MSI](http://nodejs.org/download/)  \r\n    (Mac OS X) username$ npm install -g yo  \r\n    (Windows) http://nodejs.org/download/\r\n\r\n## Web Dev Resources ##\r\n### General: Plugins and Tips & Tricks\r\n- [jQuery Plugins](http://plugins.jquery.com/)\r\n- [CSS Tricks](http://github.com/CSS-Tricks/)\r\n\r\n### Table data (inlcuding RWD)\r\n- [DataTables](http://www.datatables.net/)\r\n- [FooTable](https://github.com/bradvin/FooTable)\r\n\r\n### Timelines and Graphing\r\n- [TimelineJS](http://timeline.verite.co/)\r\n- [Timeglider](http://timeglider.com/widget/kitchen_sink.html)\r\n\r\n<br/>\r\n\r\n## Miscellanea ##\r\n### Best Practices and Debugging\r\n- [Chrome Dev Tools](https://developers.google.com/chrome-developer-tools/docs/authoring-development-workflow)\r\n- [Visual Event 2](http://www.sprymedia.co.uk/article/Visual+Event+2)\r\n\r\n### Open-Source Software (OSS) \r\n- [CHAP - Collective Human-Agent Paradigm](http://chap.almende.com/)\r\n- [Adobe OpenSource](http://html.adobe.com/opensource/)\r\n\r\n### Useful Utilities\r\n- [View (all) Plain Text Files in Finder](https://coderwall.com/p/dlithw)\r\n- [Desktop Utility](http://sweetpproductions.com/)\r\n- [Display Menu](https://itunes.apple.com/us/app/display-menu/id549083868?mt=12)\r\n- [SecondBar](https://www.macupdate.com/app/mac/33264/secondbar)\r\n\r\n### Newsletters\r\n- [How-To Geek Daily](http://www.howtogeek.com/)\r\n- [Web Design Weekly](http://web-design-weekly.com/)\r\n- [JavaScript Weekly](http://javascriptweekly.com/)\r\n- [HTML5 Weekly](http://html5weekly.com/)\r\n- [CSS-Tricks](http://css-tricks.com/subscription-options/)\r\n- [Smashing](http://www.smashingmagazine.com/the-smashing-newsletter/)\r\n\r\n\r\n### Shell Scripts\r\n#### .bash_profile\r\n> The following script is a compilation of my various work environments.  \r\n> To note: **ferment**, **ls**, **edit**\r\n\r\n```bash\r\ndefaults write com.apple.finder QLEnableTextSelection -bool true\r\nalias hidden='defaults write com.apple.Finder AppleShowAllFiles'\r\n\r\n#alias toyota='cd /Volumes/Dev/web/toyota/pswebp41/cache/default/main/Toyota/Toyota2007/WORKAREA/johnjoe'\r\nalias rename='for f in *; do if [[\"$f\" =~ $* ]]; then mv \"$f\" \"${BASH_REMATCH[1]}\"; fi; done;'\r\n#alias ritup='cd /Volumes/Dev/web/toyota/svn/rit/ToyotaSite2012UI; svn cleanup; svn up;'\r\nalias pup='pip freeze --local | grep -v '^\\-e' | cut -d = -f 1  | xargs pip install -U'\r\nalias ferment='brew up && brew upgrade `brew outdated` && gem up && npm up'\r\n#alias jsdoc='/Volumes/Dev/jsdoc/jsdoc -l -d ./jsdocs'\r\n#alias apache='cd /Applications/MAMP/conf/apache'\r\n#alias software='cd /Volumes/Dev/Software'\r\nalias sudoedit='sudo open -a TextEdit.app'\r\nalias reload='source ~/.bash_profile'\r\nalias edit='open -a TextEdit.app'\r\n#alias web='cd /Volumes/Dev/web'\r\nalias ls='ls -alhFG'\r\nalias home='cd ~'\r\n\r\nalias IP='ipconfig getifaddr en0'\r\nalias svn='/opt/local/bin/svn'\r\n#alias js='/Volumes/Dev/GitHub/v8/out/native/shell'\r\n#alias watchrit='while true; do ritup echo \"SVN Update for RIT at $(date).\"; sleep 600; done'\r\n\r\nexport PATH=/usr/local/bin:$PATH\r\n#export JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home\r\nexport EDITOR=/Applications/TextEdit.app/Contents/MacOS/TextEdit\r\n#export JBOSS_HOME=/jboss-5.1.0.GA\r\n\r\n#export SLPADMIN=/Volumes/Dev/web/toyota/svn/slp/SLPAdmin/trunk\r\nfunction slp () {\r\n  local __pwd=`pwd`\r\n  local __pid=`pid get SLPPID`\r\n  if [ \"$1\" = \"up\" ]; then\r\n    cd $SLPADMIN; svn cleanup; svn up;\r\n    echo \"SLP has been updated.\"; return 0;\r\n  fi\r\n  echo \"SLP v2.0 Admin script running …\"\r\n  if [ \"$1\" = \"build\" ]; then\r\n    echo \"Building SLPAdmin application …\"\r\n    slp up; mvn -DskipTests install\r\n    cp $HOME/.m2/repository/com/tms/slp20/slpadmin/1.0/slpadmin-1.0.war $JBOSS_HOME/server/all-with-hornetq/deploy\r\n    echo \"Done building and copying SLPAdmin application.\"\r\n  fi\r\n  if [[ $__pid && ( \"$1\"=\"stop\" || \"$1\"=\"kill\" )]]; then\r\n    for id in $(ps -A | grep org.jboss | awk '{print $1}'); do kill $id; done;\r\n    echo \"Killing SLP with Process ID: $SLPPID\"\r\n    kill $__pid && pid unset SLPPID\r\n  else\r\n    cd $JBOSS_HOME/bin\r\n    nohup ./run.sh -c all-with-hornetq -P ../test.properties -g wheel -u 239.255.100.100 -b 0.0.0.0 -Djboss.messaging.ServerPeerID=-Djboss.service.binding.set=ports-default >/dev/null & >/dev/null\r\n    sleep 10 && echo \"Starting server (for SLPAdmin) in background with PID: $(pid set SLPPID $!; pid get SLPPID). Please wait 15 seconds …\"\r\n    sleep 5 && echo \"Please wait 10 seconds …\" && sleep 5 && echo \"Please wait 5 seconds …\" && sleep 5\r\n    open http://localhost:8080/slpadmin-1.0/ &\r\n    echo \"You may need a browser refresh.\"\r\n    cd $__pwd\r\n  fi\r\n  echo \"SLP v2.0 Admin script finished.\"\r\n}\r\nfunction pid () {\r\n  if [ \"$1\" = \"set\" ]; then\r\n    launchctl setenv $2 $3\r\n  elif [ \"$1\" = \"unset\" ]; then\r\n    launchctl unsetenv $2\r\n  elif [ \"$1\" = \"get\" ]; then\r\n    eval \"launchctl getenv $2\"\r\n  fi\r\n}\r\n\r\n#[[ -s \"$HOME/.rvm/scripts/rvm\" ]] && source \"$HOME/.rvm/scripts/rvm\" # Load RVM into a shell session *as a function*\r\n\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}